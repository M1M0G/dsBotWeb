{"version":3,"sources":["layout/main.css","models/botModel.js","RouteWithSubRoutes.js","layout/mainLayout.js","routes.js","App.js","utils/api/user/index.js","utils/api/guild/index.js","utils/api/song/index.js","models/songModel.js","models/userModel.js","models/guildModel.js","index.jsx","models/init.js"],"names":["module","exports","Bot","types","model","id","identifier","title","string","description","status","boolean","actions","self","setStatus","newStatus","setDescription","newDescription","setTitle","newTitle","remove","getParent","RouteWithSubRoutes","route","exact","path","render","props","isAuth","auth","component","routes","to","MainLayout","this","children","console","log","className","styles","main","sideBar","hero","cube","content","Component","lazy","AppRouter","inject","observer","rootStore","token","fallback","map","i","App","getUser","a","fetch","headers","authorization","res","json","Error","getGuild","skip","pause","stop","play","url","method","body","JSON","stringify","Song","union","null","length","pauseSong","flow","songApi","skipSong","stopSong","User","userToken","maybeNull","userName","userId","discriminator","setUser","user","username","Guild","guildId","name","setGuild","guild","stores","optional","bots","array","songs","afterCreate","window","localStorage","getItem","req","push","Promise","all","addBot","item","addSong","uuid","bot","destroy","checkQueue","data","queue","applySnapshot","userApi","guildApi","servers","forEach","server","playSong","create","ReactDOM","document","getElementById"],"mappings":"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","file":"build/js/main.cb4755de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main-main-3Qpb\",\"sideBar\":\"main-sideBar-2nLL\",\"auth\":\"main-auth-3lw7\",\"content\":\"main-content-3ox1\",\"hero\":\"main-hero-pWvX\",\"cube\":\"main-cube-2NVu\"};","import {getParent, types} from \"mobx-state-tree\";\r\n\r\nexport const Bot = types.model(\"Bot\",{\r\n    id: types.identifier,\r\n    title: types.string,\r\n    description: types.string,\r\n    status: types.boolean\r\n}).actions(self => ({\r\n\r\n    setStatus: (newStatus) => {\r\n        self.status = newStatus\r\n    },\r\n\r\n    setDescription: (newDescription) => {\r\n        self.description = newDescription\r\n    },\r\n\r\n    setTitle: (newTitle) => {\r\n        self.title = newTitle\r\n    },\r\n    remove: () => {\r\n        // 2 is the defth of the child in the tree, so it needs to go 2 parents up\r\n        getParent(self, 2).remove(self);\r\n    }\r\n}))","import React from 'react';\nimport { Route,Redirect } from 'react-router-dom';\n\nconst RouteWithSubRoutes = (route) => {\n    return(\n    <Route\n        exact = {route.exact}\n        path={route.path}\n        render={(props) => route.isAuth || route.auth? <route.component {...props} routes={route.routes}/> : <Redirect to={'/auth'}/>}\n      />\n  )\n};\n\nexport default RouteWithSubRoutes;\n","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styles from \"./main.css\"\r\nclass MainLayout extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        const { children, isAuth } = this.props;\r\n        console.log(children)\r\n        return(\r\n            <div className={styles.main}>\r\n                {isAuth? (<aside className={styles.sideBar}>\r\n                    <ul>\r\n                        <Link to=\"/\">\r\n                            <li>\r\n                                <span>home</span>\r\n                            </li>\r\n                        </Link>\r\n                        <Link to=\"/music\">\r\n                            <li>\r\n                                <span>music</span>\r\n                            </li>\r\n                        </Link>\r\n                    </ul>\r\n                </aside>): (\r\n                    <aside className={styles.auth}>\r\n                        <div className={styles.hero}/>\r\n                        <div className={styles.cube}/>\r\n                        <div className={styles.cube}/>\r\n                        <div className={styles.cube}/>\r\n                        <div className={styles.cube}/>\r\n                        <div className={styles.cube}/>\r\n                    </aside>\r\n                )}\r\n                <main className={styles.content}>\r\n                    {children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainLayout","import React, { Suspense, lazy } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport RouteWithSubRoutes from './RouteWithSubRoutes';\r\nimport MainLayout from \"./layout/mainLayout\";\r\nimport {inject, observer} from \"mobx-react\";\r\n\r\n\r\nconst Home = lazy(() => import('./pages/home'));\r\nconst Music = lazy(() => import('./pages/music'));\r\nconst Auth = lazy(() => import('./pages/auth'));\r\n\r\nconst routes = [\r\n    {\r\n        exact: true,\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n    {\r\n        path: '/music',\r\n        component: Music,\r\n    },\r\n    {\r\n        auth: true,\r\n        path: '/auth',\r\n        component: Auth,\r\n    },\r\n];\r\n\r\nconst AppRouter = inject(\"rootStore\")(observer((props) => {\r\n    let isAuth\r\n    if (props.rootStore.token) {\r\n        isAuth = true\r\n    } else {\r\n        isAuth = false\r\n    }\r\n    console.log(isAuth)\r\n    return (\r\n        <Router>\r\n            <MainLayout isAuth = {isAuth}>\r\n                <Suspense fallback={<div className=\"lazy-loading\">Загрузка </div>}>\r\n                    {routes.map((route, i) => (\r\n                        <RouteWithSubRoutes key={i} isAuth = {isAuth} {...route}/>\r\n                    ))}\r\n                </Suspense>\r\n            </MainLayout>\r\n        </Router>\r\n    );\r\n}));\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\nimport AppRouter from './routes';\n\nconst App = () => {\n  return (\n      <AppRouter/>\n  );\n};\n\nexport default App;\n","export default {\r\n    getUser: async(token) => {\r\n        try {\r\n            const res = await fetch('https://discord.com/api/users/@me', {\r\n                headers: {\r\n                    authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            return res.json()\r\n        } catch (e) {\r\n           throw new Error(e)\r\n        }\r\n    }\r\n}","export default {\r\n    getGuild: async(token) => {\r\n        try {\r\n            const res = await fetch('https://discord.com/api/users/@me/guilds', {\r\n                headers: {\r\n                    authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            return  await res.json()\r\n        }catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n}","export default {\r\n    skip: async() => {\r\n        await fetch('/api/skip')\r\n    },\r\n    pause: async () => {\r\n        await fetch('/api/pause')\r\n    },\r\n    stop: async() => {\r\n        await fetch('/api/stop')\r\n    },\r\n    play: async(url) => {\r\n        await fetch('/api/play', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify({url: url})\r\n        })\r\n    },\r\n}","import {getParent, types, flow} from \"mobx-state-tree\";\r\nimport {songApi, userApi} from \"../utils/api\";\r\n\r\nexport const Song = types.model('Song',{\r\n    id: types.identifier,\r\n    url: types.string,\r\n    title: types.string,\r\n    description: types.union(types.string, types.null),\r\n    length: types.string,\r\n}).actions(self => ({\r\n\r\n    setStatus: (newStatus) => {\r\n        self.status = newStatus\r\n    },\r\n\r\n    setDescription: (newDescription) => {\r\n        self.description = newDescription\r\n    },\r\n\r\n    setTitle: (newTitle) => {\r\n        self.title = newTitle\r\n    },\r\n\r\n    remove: () => {\r\n        // 2 is the defth of the child in the tree, so it needs to go 2 parents up\r\n        getParent(self, 2).remove(self);\r\n    }\r\n})).actions(self => ({\r\n    pauseSong: flow(function*(){\r\n        try {\r\n            yield songApi.pause();\r\n        } catch (e) {\r\n            throw  e;\r\n        }\r\n    }),\r\n    skipSong: flow(function*(){\r\n        try {\r\n            yield songApi.skip();\r\n        } catch (e) {\r\n            throw  e;\r\n        }\r\n    }),\r\n    stopSong: flow(function*(){\r\n        try {\r\n            yield songApi.stop();\r\n        } catch (e) {\r\n            throw  e;\r\n        }\r\n    }),\r\n}))","import {types} from \"mobx-state-tree\";\r\n\r\nexport const User = types.model(\"User\",{\r\n    userToken: types.maybeNull(types.string),\r\n    userName: types.maybeNull(types.string),\r\n    userId: types.maybeNull(types.string),\r\n    discriminator: types.maybeNull(types.string),\r\n    //userId: types.identifier\r\n}).actions(self => ({\r\n    setUser: (user) => {\r\n        self.userId = user.id;\r\n        self.userName = user.username;\r\n        self.discriminator = user.discriminator\r\n    },\r\n}))","import {types} from \"mobx-state-tree\";\r\n\r\nexport const Guild = types.model(\"Guild\",{\r\n    guildId: types.maybeNull(types.string),\r\n    name: types.maybeNull(types.string),\r\n\r\n}).actions(self => ({\r\n\r\n    setGuild: (guild) => {\r\n        self.guildId = guild.id;\r\n        self.name = guild.name;\r\n    },\r\n}))","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport React, {useEffect} from \"react\"\nimport {Provider} from \"mobx-react\";\nimport {rootStore} from \"./models/init\";\n\n\n\nconst stores = {rootStore}\n\nfunction renderApp(){\n\n    ReactDOM.render(\n        <Provider {...stores}>\n            <App/>\n        </Provider>,\n        document.getElementById('root'));\n}\n\nrenderApp();","import {applySnapshot, destroy, types} from \"mobx-state-tree\";\r\nimport {Bot} from \"./botModel\";\r\nimport {Song} from \"./songModel\";\r\nimport {v4 as uuid} from \"uuid\"\r\nimport {User} from \"./userModel\";\r\nimport {flow} from \"mobx\";\r\nimport {userApi, guildApi, songApi} from \"../utils/api\";\r\nimport {Guild} from \"./guildModel\";\r\nconst root = types.model(\"root\", {\r\n    token: types.maybeNull(types.string),\r\n    user: types.optional(User, {}),\r\n    guild: types.optional(Guild, {}),\r\n    bots: types.optional(types.array(Bot), []),\r\n    songs: types.optional(types.array(Song),[]),\r\n}).actions(self => ({\r\n    afterCreate(){\r\n        let token = window.localStorage.getItem(\"token\")\r\n        if (token){\r\n            self.token = token\r\n            let req = []\r\n            req.push(self.getUser())\r\n            req.push(self.getGuild())\r\n            Promise.all(req)\r\n        }\r\n    },\r\n    addBot(item) {\r\n        self.bots.push(item);\r\n    },\r\n    addSong(item) {\r\n        item.id = uuid()\r\n        self.songs = [item, ...self.songs]\r\n    },\r\n    remove(bot) {\r\n        destroy(bot); // ==> self.items.splice(self.items.indexOf(item), 1);\r\n    },\r\n    checkQueue(data) {\r\n        if (data && data.queue !== null)\r\n            applySnapshot(self.songs, data.queue)\r\n    },\r\n    getUser: flow(function*() {\r\n        try {\r\n            const user = yield userApi.getUser(self.token)\r\n            self.user.setUser(user)\r\n        } catch (e) {\r\n            throw  e;\r\n        }\r\n    }),\r\n    getGuild: flow(function*() {\r\n        try {\r\n            const servers = yield guildApi.getGuild(self.token)\r\n            console.log(servers)\r\n            return servers.forEach(server => {\r\n                if (server.id === \"659425745256579082\") {\r\n                    self.guild.setGuild(server)\r\n                }\r\n            })\r\n        } catch (e) {\r\n            throw  e;\r\n        }\r\n    }),\r\n    playSong: flow(function*(url){\r\n        try {\r\n            yield songApi.play(url);\r\n        } catch (e) {\r\n            throw  e;\r\n        }\r\n    })\r\n}));\r\n\r\nexport const rootStore = root.create( {token: null, user: {}, bots: [], songs: []})"],"sourceRoot":""}